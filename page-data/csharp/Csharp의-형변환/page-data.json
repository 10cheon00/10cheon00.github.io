{"componentChunkName":"component---src-templates-blog-post-js","path":"/csharp/Csharp의-형변환/","result":{"data":{"site":{"siteMetadata":{"title":"10cheon00의 Archive"}},"markdownRemark":{"id":"f162a933-fa73-5314-a6c9-7f2cd13b3618","excerpt":"암시적 형변환 암시적 형변환은 여러 상황에서 일어난다. 대표적으로 function member invocation…","html":"<h1 id=\"암시적-형변환\" style=\"position:relative;\"><a href=\"#%EC%95%94%EC%8B%9C%EC%A0%81-%ED%98%95%EB%B3%80%ED%99%98\" aria-label=\"암시적 형변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"16\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>암시적 형변환</h1>\n<p>암시적 형변환은 여러 상황에서 일어난다. 대표적으로 function member invocation(?), 캐스팅 또는 대입 시기에 일어난다.</p>\n<h3 id=\"동일-형변환\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%9D%BC-%ED%98%95%EB%B3%80%ED%99%98\" aria-label=\"동일 형변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"16\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>동일 형변환</h3>\n<p>같은 타입으로의 형변환할 때 일어난다.</p>\n<ul>\n<li><code class=\"language-text\">object</code>와 <code class=\"language-text\">dynamic</code> 사이</li>\n<li>튜플이 같은 항을 가질 때 각각 대응하는 항 사이</li>\n<li>같은 제네릭 형식으로 형성된 타입 사이</li>\n</ul>\n<p>대부분의 경우에 이런 형변환은 런타임에서 영향이 없다고 한다.</p>\n<h3 id=\"숫자-형변환\" style=\"position:relative;\"><a href=\"#%EC%88%AB%EC%9E%90-%ED%98%95%EB%B3%80%ED%99%98\" aria-label=\"숫자 형변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"16\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>숫자 형변환</h3>\n<ul>\n<li><code class=\"language-text\">byte</code> -> <code class=\"language-text\">short</code>, <code class=\"language-text\">int</code>, <code class=\"language-text\">long</code> ...</li>\n<li><code class=\"language-text\">int</code> -> <code class=\"language-text\">long</code>, <code class=\"language-text\">float</code>, ...</li>\n<li><code class=\"language-text\">long</code> -> <code class=\"language-text\">float</code>, <code class=\"language-text\">double</code> ...</li>\n<li><code class=\"language-text\">float</code> -> <code class=\"language-text\">double</code></li>\n<li>...</li>\n</ul>\n<p>어떤 자료형이 상대적으로 더 큰 자료형으로 형변환 될 때 암시적 숫자 형변환이 일어난다.</p>\n<p>정수 자료형에서 실수 자료형으로 형변환이 일어날 때, (ex. <code class=\"language-text\">int</code>나 <code class=\"language-text\">long</code>이 <code class=\"language-text\">float</code>이나 <code class=\"language-text\">double</code>로 형변환이 일어날 때) 정확도가 떨어질 수 있지만 크기값(magnitude)은 변하지 않는다고 한다.</p>\n<h3 id=\"열거-형변환\" style=\"position:relative;\"><a href=\"#%EC%97%B4%EA%B1%B0-%ED%98%95%EB%B3%80%ED%99%98\" aria-label=\"열거 형변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"16\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>열거 형변환</h3>\n<p><code class=\"language-text\">int</code>값 또는 <code class=\"language-text\">0</code>값이 <code class=\"language-text\">enum_type</code> 그리고 기본 유형이 <code class=\"language-text\">enum_type</code>인 <code class=\"language-text\">nullable_value_type</code>으로 형변환 될 때 일어난다.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">enum</span> <span class=\"token class-name\">E</span> <span class=\"token punctuation\">{</span>\n  A <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  B\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">E</span> e <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// implicit enumeration conversion</span></code></pre></div>\n<h3 id=\"보간-문자열-형변환\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EA%B0%84-%EB%AC%B8%EC%9E%90%EC%97%B4-%ED%98%95%EB%B3%80%ED%99%98\" aria-label=\"보간 문자열 형변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"16\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>보간(?) 문자열 형변환</h3>\n<p><code class=\"language-text\">$\"{variable}\"</code>를 이용해 만들어진 문자열이 <code class=\"language-text\">\"{0}\", variable</code>로 바뀔 때 일어난다.</p>\n<p>구체적으로는 interpolated_string_expression이 <code class=\"language-text\">System.FormattableString</code>이나 <code class=\"language-text\">System.IFormattable</code>로 형변환될 때 일어난다.</p>\n<h3 id=\"boxing\" style=\"position:relative;\"><a href=\"#boxing\" aria-label=\"boxing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"16\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>Boxing</h3>\n<p>값 형식이 참조 형식으로 변환될 때 일어난다. 자세한 설명은 <a href=\"/others/Boxing%EA%B3%BC-Unboxing\">Boxing과 Unboxing</a>에 정리했다.</p>\n<h3 id=\"그-외\" style=\"position:relative;\"><a href=\"#%EA%B7%B8-%EC%99%B8\" aria-label=\"그 외 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"16\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>그 외</h3>\n<p>공식 문서에는 정말 많은 형변환이 있는데 나머지는 이해하기 어려워 정리하지 않기로 했다...</p>\n<h1 id=\"명시적-형변환\" style=\"position:relative;\"><a href=\"#%EB%AA%85%EC%8B%9C%EC%A0%81-%ED%98%95%EB%B3%80%ED%99%98\" aria-label=\"명시적 형변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"16\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>명시적 형변환</h1>\n<p>명시적 형변환은 캐스팅을 할 때 일어난다. 암시적 형변환이 항상 성공하는 것과는 반대로 명시적 형변환은 성공하지 않을 때도 있으며 정보를 잃어버리기도 한다.</p>\n<h3 id=\"숫자-형변환-1\" style=\"position:relative;\"><a href=\"#%EC%88%AB%EC%9E%90-%ED%98%95%EB%B3%80%ED%99%98-1\" aria-label=\"숫자 형변환 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"16\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>숫자 형변환</h3>\n<ul>\n<li><code class=\"language-text\">int</code> -> <code class=\"language-text\">short</code>, <code class=\"language-text\">byte</code>, ...</li>\n<li><code class=\"language-text\">float</code> -> <code class=\"language-text\">int</code> , <code class=\"language-text\">short</code>, <code class=\"language-text\">byte</code>, ...</li>\n<li><code class=\"language-text\">double</code> -> <code class=\"language-text\">float</code>, <code class=\"language-text\">int</code> ...</li>\n<li>...</li>\n</ul>\n<p>대개 더 큰 자료형이 작은 자료형으로 형변환 될 때 일어난다.</p>\n<p>이 때 정보를 잃어버릴 수 있을 뿐만 아니라 에러를 throw할 수도 있다.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">decimal</code> -> 정수형 변수</p>\n<p>실수값을 원점에 가까운 방향으로 반올림(?)하여 정수형 변수에 저장한다. 만약 정수형 변수의 범위 바깥의 값이라면 <code class=\"language-text\">System.OverflowException</code>이 발생한다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">float</code> 또는 <code class=\"language-text\">decimal</code> -> 정수형 변수</p>\n<ul>\n<li>\n<p><code class=\"language-text\">checked</code></p>\n<ul>\n<li><code class=\"language-text\">NaN</code>이나 무한값일 경우 <code class=\"language-text\">System.OverflowException</code>이 발생한다.</li>\n<li>그렇지 않으면 실수값을 원점에 가까운 방향으로 반올림(?)하여 저장한다. 이 때 정수형 변수의 범위 바깥의 값이라면 <code class=\"language-text\">System.OverflowException</code>이 발생한다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">unchecked</code></p>\n<p>항상 형변환이 성공한다.</p>\n<ul>\n<li><code class=\"language-text\">NaN</code>이나 무한값일 경우 불특정값으로 저장된다.</li>\n<li>그렇지 않으면 실수값을 원점에 가까운 방향으로 반올림(?)하여 저장한다. 이 때 정수형 변수의 범위 바깥의 값이라면 불특정값으로 저장된다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">double</code> -> <code class=\"language-text\">float</code></p>\n<p><code class=\"language-text\">double</code>값이 가까운 <code class=\"language-text\">float</code>값으로 바뀌어 저장된다.</p>\n<ul>\n<li><code class=\"language-text\">float</code>으로 나타내기엔 너무 작은 값이 변환될 때에는 <code class=\"language-text\">0</code>이 저장된다.</li>\n<li><code class=\"language-text\">float</code>으로 나타내기에 너무 큰 값이 변환될 때에는 무한값이 저장된다.</li>\n<li><code class=\"language-text\">double</code>값이 <code class=\"language-text\">NaN</code>이라면 <code class=\"language-text\">float</code>에도 <code class=\"language-text\">NaN</code>으로 저장된다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">float</code> 또는 <code class=\"language-text\">double</code> -> <code class=\"language-text\">decimal</code></p>\n<p>실수값이 <code class=\"language-text\">decimal</code>타입으로 변환되고 가까운 값으로 반올림되어 저장된다.</p>\n<ul>\n<li><code class=\"language-text\">decimal</code>로 나타내기에 너무 작은 값이 변환될 때에는 <code class=\"language-text\">0</code>이 저장된다.</li>\n<li><code class=\"language-text\">decimal</code>로 나타내기에 너무 큰 값이거나 무한값이 변환될 때에는, <code class=\"language-text\">decimal</code>이 무한값을 지원한다면(?) 무한값으로 저장되고 그렇지 않다면 <code class=\"language-text\">System.OverflowException</code>이 발생한다.</li>\n<li><code class=\"language-text\">NaN</code>이 변환될 때에는 <code class=\"language-text\">decimal</code>이 <code class=\"language-text\">NaN</code>을 지원한다면 <code class=\"language-text\">NaN</code>이 저장되고 그렇지 않으면 <code class=\"language-text\">System.OverflowException</code>이 발생한다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">decimal</code> -> <code class=\"language-text\">float</code> 또는 <code class=\"language-text\">double</code></p>\n<p>가까운 값으로 반올림되어 저장된다. <code class=\"language-text\">float</code> 또는 <code class=\"language-text\">double</code>이 <code class=\"language-text\">decimal</code>로 변환될 때처럼 동작하지만 정확도가 조금 떨어질 수 있을 뿐 에러를 일으키지 않는다.</p>\n</li>\n</ul>\n<h3 id=\"참조-형변환\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0-%ED%98%95%EB%B3%80%ED%99%98\" aria-label=\"참조 형변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"16\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>참조 형변환</h3>\n<p>런타임에 참조 형변환이 성공하려면, 대상이 <code class=\"language-text\">null</code>이거나, 대상의 타입이 암시적인 형변환으로 목표의 타입이 될 수 있어야 한다. 그렇지 않은 경우에는 <code class=\"language-text\">System.InvalidCastException</code>이 발생한다.</p>\n<blockquote>\n<p>암시적 또는 명시적 참조 형변환은 값을 수정하는 일이 일어나지 않는다.</p>\n</blockquote>\n<ul>\n<li><code class=\"language-text\">object</code>나 <code class=\"language-text\">dynamic</code>이 다른 참조 형식으로 변환될 때</li>\n<li>자식 클래스로 생성된 인스턴스를 부모 클래스로 변환할 때</li>\n<li>인터페이스로 참조하는 인스턴스를 그 인스턴스의 클래스 형식으로 변환할 때</li>\n<li>...솔직히 나머지는 잘 모르겠다.</li>\n</ul>\n<h3 id=\"unboxing\" style=\"position:relative;\"><a href=\"#unboxing\" aria-label=\"unboxing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"16\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>Unboxing</h3>\n<p>Unboxing은 Boxing을 통해 생성된 데이터를 다시 값 형식으로 변환할 때 일어난다.</p>\n<h3 id=\"그-외-1\" style=\"position:relative;\"><a href=\"#%EA%B7%B8-%EC%99%B8-1\" aria-label=\"그 외 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"16\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>그 외</h3>\n<p>공식 문서에는 정말 많은 형변환이 있는데 나머지는 이해하기 어려워 정리하지 않기로 했다... 참고 자료를 확인하면 좋을 것 같다.</p>\n<h1 id=\"참고-자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C\" aria-label=\"참고 자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"16\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>참고 자료</h1>\n<p><a href=\"https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/conversions\">Conversions | Microsoft Learn</a></p>","frontmatter":{"title":"Csharp의 형변환","date":"August 10, 2023","description":null,"tags":["csharp"]}},"previous":{"fields":{"slug":"/csharp/Boxing과-Unboxing/"},"frontmatter":{"title":"Boxing과 Unboxing"}},"next":{"fields":{"slug":"/design-patterns/전략-패턴/"},"frontmatter":{"title":"전략 패턴"}}},"pageContext":{"id":"f162a933-fa73-5314-a6c9-7f2cd13b3618","previousPostId":"25d98f03-8018-5e71-a9c8-b5e3b52f6ee0","nextPostId":"e9c3c9c3-daaf-53c2-b08e-5a5463195c54"}},"staticQueryHashes":["230163734","3589320610"],"slicesMap":{}}