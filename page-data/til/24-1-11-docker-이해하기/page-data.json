{"componentChunkName":"component---src-templates-blog-post-js","path":"/til/24-1-11-docker-이해하기/","result":{"data":{"site":{"siteMetadata":{"title":"10cheon00의 Archive"}},"markdownRemark":{"id":"790edec3-1f59-53ec-afb5-f39b7e56ad7d","excerpt":"docker란 초보를 위한 도커 안내서 - 도커란 무엇인가를 보고 도커가 어떤건지 대략 이해했다. 옛날에는 가상화를 한다면 VMWare같은 OS를 가상화하는 방법을 사용했었다. 도커는 OS위에 OS…","html":"<h1 id=\"docker란\" style=\"position:relative;\"><a href=\"#docker%EB%9E%80\" aria-label=\"docker란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"16\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>docker란</h1>\n<p><a href=\"https://subicura.com/2017/01/19/docker-guide-for-beginners-1.html\">초보를 위한 도커 안내서 - 도커란 무엇인가</a>를 보고 도커가 어떤건지 대략 이해했다. 옛날에는 가상화를 한다면 VMWare같은 OS를 가상화하는 방법을 사용했었다. 도커는 OS위에 OS를 올리지 않고 <em>프로세스를 격리하는 방법</em>을 사용한다.</p>\n<p>각 프로세스는 <strong>컨테이너</strong>라는 단위로 구분되고, 컨테이너는 서로 독립적으로 동작하여 영향을 주지 않는다.</p>\n<p>컨테이너를 실행하기 위해서는 <strong>이미지</strong>가 필요한데, 실행 파일 및 환경 변수 등이 저장되어 있다. 컨테이너는 단순히 이미지를 실행한 것에 지나지 않는다. 이미지는 상태가 불변이므로 컨테이너의 상태가 바뀌어도 영향을 받지 않는다.</p>\n<h1 id=\"겪었던-오류들\" style=\"position:relative;\"><a href=\"#%EA%B2%AA%EC%97%88%EB%8D%98-%EC%98%A4%EB%A5%98%EB%93%A4\" aria-label=\"겪었던 오류들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"16\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>겪었던 오류들</h1>\n<p>간단하게 ubuntu:20.04 이미지를 받아 실행했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run ubuntu:20.04</code></pre></div>\n<p>그런데 위 명령어를 실행하니 별다른게 뜨지 않고 종료되었다. 이상해서 한 번 더 명령어를 실행했더니 똑같이 아무것도 뜨지 않았다. <code class=\"language-text\">docker ps</code>명령어로 실행된 컨테이너를 확인해보니 아무것도 없었다. 이상해서 <code class=\"language-text\">docker ps -a</code>를 해보니 그제서야 출력되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">CONTAINER ID   IMAGE          COMMAND       CREATED              STATUS                          PORTS     NAMES\n4e05d2f7e6f3   ubuntu:20.04   \"/bin/bash\"   About a minute ago   Exited (0) About a minute ago             frosty_carson\nf51ebaa85d03   ubuntu:20.04   \"/bin/bash\"   About a minute ago   Exited (0) About a minute ago             upbeat_lichterman\nf98810b0c068   ubuntu:20.04   \"/bin/bash\"   2 minutes ago        Exited (0) 2 minutes ago                  fervent_mayer</code></pre></div>\n<p>잘 보면 같은 이미지로 여러번 컨테이너를 생성한 모습이다. 대신 모든 상태가 <code class=\"language-text\">Exited</code>로 나온다. 컨테이너를 실행하면서 전달된 명령은 <code class=\"language-text\">/bin/bash</code>인데, 아마 별다른 입력이 없어서 그대로 종료된것 같다.</p>\n<p>이 현상을 보고 도커는 이미지를 컨테이너 단위로 실행한다는 것을 이해했다. 컨테이너를 종료시켜도 사라지지 않고 어딘가에 남아있다. 이를 확인하기 위해 wsl를 아예 종료시킨 다음 다시 <code class=\"language-text\">docker ps -a</code>를 했더니 여전히 컨테이너가 살아있음을 확인했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker run -it ubuntu:20.04</code></pre></div>\n<p>실행할 때 이런 옵션을 넣어주니까 익숙한 bash가 등장하면서 <code class=\"language-text\">docker ps</code>에도 나타난다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># docker ps\nCONTAINER ID   IMAGE          COMMAND       CREATED          STATUS          PORTS     NAMES\n2685c0d6e891   ubuntu:20.04   \"/bin/bash\"   21 seconds ago   Up 20 seconds             bold_germain</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># docker ps -a\nCONTAINER ID   IMAGE          COMMAND       CREATED          STATUS                      PORTS     NAMES\n2685c0d6e891   ubuntu:20.04   \"/bin/bash\"   50 seconds ago   Up 50 seconds                         bold_germain\n4e05d2f7e6f3   ubuntu:20.04   \"/bin/bash\"   16 minutes ago   Exited (0) 16 minutes ago             frosty_carson\nf51ebaa85d03   ubuntu:20.04   \"/bin/bash\"   16 minutes ago   Exited (0) 2 minutes ago              upbeat_lichterman\nf98810b0c068   ubuntu:20.04   \"/bin/bash\"   17 minutes ago   Exited (0) 11 minutes ago             fervent_mayer</code></pre></div>\n<p>컨테이너 내에서 파일을 생성한 후 컨테이너를 종료하여도 그 컨테이너가 삭제되지 않았다면 다시 시작할 때에도 상태가 유지되어 있다. 간단하게 <code class=\"language-text\">touch testfile</code>한 후 <code class=\"language-text\">docker container stop bold_germain</code>를 실행하여 컨테이너를 종료했다. 다시 <code class=\"language-text\">docker container start bold_germain</code>로 컨테이너를 실행하면 그 파일이 남아있음을 알 수 있는데 컨테이너의 파일 시스템은 로컬 파일시스템과는 독립적이므로 그 파일을 로컬 시스템에서 접근할 수는 없다.</p>","frontmatter":{"title":"24-1-11 docker 이해하기","date":"January 11, 2024","description":null,"tags":["TIL","docker"]},"tableOfContents":"<ul>\n<li><a href=\"#docker%EB%9E%80\">docker란</a></li>\n<li><a href=\"#%EA%B2%AA%EC%97%88%EB%8D%98-%EC%98%A4%EB%A5%98%EB%93%A4\">겪었던 오류들</a></li>\n</ul>"},"previous":{"fields":{"slug":"/computer-organization/컴퓨터-구조론-(7)-메모리-계층-및-캐시/"},"frontmatter":{"title":"컴퓨터 구조론 (7) - 메모리 계층 및 캐시","date":"January 04, 2024"}},"next":{"fields":{"slug":"/til/24-1-12-docker-build/"},"frontmatter":{"title":"24-1-12 docker build","date":"January 12, 2024"}}},"pageContext":{"id":"790edec3-1f59-53ec-afb5-f39b7e56ad7d","previousPostId":"7a45ddae-547e-547a-ad37-f4183b0ed3f1","nextPostId":"7f50860a-2b66-5b76-9940-f42b0c506485"}},"staticQueryHashes":["230163734","3589320610"],"slicesMap":{}}