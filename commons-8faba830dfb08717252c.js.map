{"version":3,"file":"commons-8faba830dfb08717252c.js","mappings":"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","sources":["webpack://archive-of-10cheon00/./node_modules/camelcase/index.js","webpack://archive-of-10cheon00/./gatsby-urls.js","webpack://archive-of-10cheon00/./node_modules/gatsby-plugin-dark-mode/ThemeToggler.js","webpack://archive-of-10cheon00/./node_modules/gatsby-plugin-dark-mode/index.js","webpack://archive-of-10cheon00/../src/image-utils.ts","webpack://archive-of-10cheon00/../src/components/hooks.ts","webpack://archive-of-10cheon00/../src/components/layout-wrapper.tsx","webpack://archive-of-10cheon00/../src/components/picture.tsx","webpack://archive-of-10cheon00/../src/components/placeholder.tsx","webpack://archive-of-10cheon00/../src/components/main-image.tsx","webpack://archive-of-10cheon00/../src/components/gatsby-image.server.tsx","webpack://archive-of-10cheon00/../src/components/gatsby-image.browser.tsx","webpack://archive-of-10cheon00/../src/components/static-image.server.tsx","webpack://archive-of-10cheon00/../src/components/static-image.tsx","webpack://archive-of-10cheon00/./src/components/table-of-contents.js","webpack://archive-of-10cheon00/./src/components/theme-toggler.js","webpack://archive-of-10cheon00/./src/components/top-bar.js","webpack://archive-of-10cheon00/./src/components/category.js","webpack://archive-of-10cheon00/./src/components/bio.js","webpack://archive-of-10cheon00/./src/components/side-bar.js","webpack://archive-of-10cheon00/./src/components/layout.js","webpack://archive-of-10cheon00/./src/components/seo.js","webpack://archive-of-10cheon00/./src/helpers/slugify.js","webpack://archive-of-10cheon00/./node_modules/react-icons/lib/esm/iconsManifest.js","webpack://archive-of-10cheon00/./node_modules/react-icons/lib/esm/iconContext.js","webpack://archive-of-10cheon00/./node_modules/react-icons/lib/esm/iconBase.js","webpack://archive-of-10cheon00/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://archive-of-10cheon00/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://archive-of-10cheon00/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://archive-of-10cheon00/./node_modules/@babel/runtime/helpers/typeof.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","const { slugify } = require(\"./src/helpers/slugify.js\")\n\n// Define All url in blog\nconst urlPatterns = {\n  category: \"/categories\",\n  tags: \"/tags\",\n}\n\nconst resolveUrl = (urlKey, ...parameters) => {\n  const isExistKey = Object.keys(urlPatterns).some(key => key === urlKey)\n  if (isExistKey) {\n    const slugifiedParameters = parameters.map(param => slugify(param))\n\n    return slugifiedParameters.reduce((res, parameter) => {\n      return `${res}/${parameter}`\n    }, urlPatterns[urlKey])\n  }\n  return `/`\n}\n\nmodule.exports.resolveUrl = resolveUrl\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar ThemeToggler = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(ThemeToggler, _React$Component);\n\n  function ThemeToggler() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      theme: typeof window !== 'undefined' ? window.__theme : null\n    });\n    return _this;\n  }\n\n  var _proto = ThemeToggler.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    window.__onThemeChange = function () {\n      _this2.setState({\n        theme: window.__theme\n      });\n    };\n  };\n\n  _proto.toggleTheme = function toggleTheme(theme) {\n    window.__setPreferredTheme(theme);\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/_react.default.createElement(this.props.children, {\n      theme: this.state.theme,\n      toggleTheme: this.toggleTheme\n    });\n  };\n\n  return ThemeToggler;\n}(_react.default.Component);\n\nThemeToggler.propTypes = {\n  children: _propTypes.default.func.isRequired\n};\nvar _default = ThemeToggler;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\n\nvar _ThemeToggler = _interopRequireDefault(require(\"./ThemeToggler\"));\n\nexports.ThemeToggler = _ThemeToggler.default;","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import * as React from \"react\"\n\nclass TableOfContents extends React.Component {\n  componentDidMount() {\n    window.addEventListener(`scroll`, this.updateTableOfContents)\n  }\n\n  updateTableOfContents() {\n    const headers = document.querySelectorAll(`\n      section[itemProp=\"articleBody\"] h1,\n      section[itemProp=\"articleBody\"] h2,\n      section[itemProp=\"articleBody\"] h3\n    `)\n    const links = document.querySelectorAll(`div.table-of-contents a`)\n    const topBarHeight = parseInt(\n      getComputedStyle(document.querySelector(`.top-bar`)).height\n    )\n\n    const currentHeader = Array.from(headers).filter(e => {\n      const pos = e.getBoundingClientRect()\n      const offset = parseInt(getComputedStyle(e).scrollMarginTop)\n        return pos.y - offset <= topBarHeight\n      }).pop();\n\n    links.forEach(link => {\n      const decodedId = decodeURI(new URL(link.href).hash).slice(1)\n      if (\n        link.textContent === currentHeader?.textContent &&\n        decodedId === currentHeader.id\n      ) {\n        link.className = `active`\n      } else {\n        link.className = ``\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(`scroll`, this.updateTableOfContents)\n  }\n\n  render() {\n    return (\n      <div\n        className=\"table-of-contents\"\n        dangerouslySetInnerHTML={{ __html: this.props.tableOfContents }}\n      ></div>\n    )\n  }\n}\n\nexport default TableOfContents\n","import * as React from \"react\"\nimport { ThemeToggler as DarkModeThemeToggler } from \"gatsby-plugin-dark-mode\"\nimport { FaMoon, FaSun } from \"react-icons/fa6\"\n\n\nclass ThemeToggler extends React.Component {\n  render() {\n    const changeUtteranceTheme = () => {\n      const utterancesEl = document.querySelector(\".utterances-frame\")\n      if (utterancesEl) {\n        const theme = document.body.classList.contains(\"dark\")\n          ? \"github-dark\"\n          : \"github-light\"\n        const message = {\n          type: \"set-theme\",\n          theme: theme,\n        }\n        utterancesEl.contentWindow.postMessage(message, \"https://utteranc.es\")\n      }\n    }\n    return (\n      <DarkModeThemeToggler>\n        {({ theme, toggleTheme }) => (\n          <label className=\"theme-toggler\">\n            <FaSun></FaSun>\n            <input\n              type=\"checkbox\"\n              onChange={e => {\n                toggleTheme(e.target.checked ? \"dark\" : \"light\")\n                changeUtteranceTheme()\n              }}\n              checked={theme === \"dark\"}\n            />{\" \"}\n            <FaMoon></FaMoon>\n          </label>\n        )}\n      </DarkModeThemeToggler>\n    )\n  }\n}\n\nexport { ThemeToggler }\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { FaGithub, FaBars } from \"react-icons/fa6\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nimport { ThemeToggler } from \"./theme-toggler\"\n\nconst TopBar = ({ title, openSideBar }) => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  // const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"top-bar\">\n      <StaticImage\n        className=\"top-bar-icon\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/top-bar-icon.png\"\n        width={125}\n        height={125}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      <Link className=\"home-link\" to=\"/\">\n        <h1 className=\"main-heading\">{title}</h1>\n      </Link>\n      <FaBars size=\"30\" className=\"side-bar-icon\" onClick={openSideBar}/>\n      <div className=\"divider\"></div>\n      <div className=\"top-bar-links\">\n        <Link to=\"/tags\">\n          <h1>Tags</h1>\n        </Link>\n        {/* add custom links */}\n      </div>\n      <div className=\"top-bar-right\">\n        <a className=\"bio-icons\" href={`${social?.github || ``}`}>\n          <FaGithub size=\"1.5rem\"></FaGithub>\n        </a>\n        <ThemeToggler className=\"theme-toggler\" />\n      </div>\n    </div>\n  )\n}\n\nexport default TopBar\n","import { Link } from \"gatsby\"\nimport * as React from \"react\"\n\nconst Category = ({\n  name,\n  count,\n  prefix,\n  path,\n  children,\n}) => {\n  return (\n    <li key={name} className=\"category-link\" data-content={prefix}>\n      <Link to={path}>\n        <span>{name}</span>\n        &nbsp;<span>({count})</span>\n      </Link>\n      {children}\n    </li>\n  )\n}\n\nexport default Category\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  // const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-icon.png\"\n        width={150}\n        height={150}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p className=\"bio-author\">\n          <strong>{author.name}</strong>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\nimport { FaHouse, FaXmark } from \"react-icons/fa6\"\n\nimport Category from \"./category\"\nimport Bio from \"./bio\"\n\nimport { resolveUrl } from \"../../gatsby-urls\"\n\nconst SideBar = ({ closeSideBar, children }) => {\n  const data = useStaticQuery(graphql`\n    query SideBarQuery {\n      allMarkdownRemark(limit: 2000) {\n        group(field: { frontmatter: { category: { name: SELECT } } }) {\n          group(\n            field: { frontmatter: { category: { category: { name: SELECT } } } }\n          ) {\n            fieldValue\n            totalCount\n          }\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `)\n\n  const categories = data.allMarkdownRemark.group\n\n  const getPrefix = (categoryIndex, subCategoryIndex) => {\n    if (subCategoryIndex == null) {\n      return `${\n        categoryIndex < categories.length - 1 ? \"+--\\u00a0\" : \"`--\\u00a0\"\n      }`\n    }\n    return `${\n      categoryIndex < categories.length - 1\n        ? \"|\\u00a0\\u00a0\\u00a0\"\n        : \"\\u00a0\\u00a0\\u00a0\\u00a0\"\n    }${\n      subCategoryIndex < categories[categoryIndex].group.length - 1\n        ? \"+--\\u00a0\"\n        : \"`--\\u00a0\"\n    }`\n  }\n\n  return (\n    <aside className=\"side-bar\">\n      <div className=\"side-bar-icons\">\n        <Link to=\"/\" className=\"side-bar-home\" onClick={closeSideBar}>\n          <FaHouse size=\"30\" />\n        </Link>\n        <FaXmark size=\"30\" className=\"side-bar-xmark\" onClick={closeSideBar} />\n      </div>\n      <Bio />\n      <div className=\"categories\">\n        <p className=\"categories-header\">All Categories</p>\n        <ul>\n          {categories.map((category, categoryIndex) => {\n            const subCategories = category.group\n\n            return (\n              <Category\n                key={category.fieldValue}\n                name={category.fieldValue}\n                count={category.totalCount}\n                prefix={getPrefix(categoryIndex)}\n                path={resolveUrl(\"category\", category.fieldValue)}\n              >\n                {subCategories == null\n                  ? null\n                  : subCategories.map((subCategory, subCategoryIndex) => {\n                      return (\n                        <Category\n                          key={subCategory.fieldValue}\n                          name={subCategory.fieldValue}\n                          count={subCategory.totalCount}\n                          prefix={getPrefix(categoryIndex, subCategoryIndex)}\n                          path={resolveUrl(\n                            \"category\",\n                            category.fieldValue,\n                            subCategory.fieldValue\n                          )}\n                        />\n                      )\n                    })}\n              </Category>\n            )\n          })}\n        </ul>\n      </div>\n      {children}\n    </aside>\n  )\n}\n\nexport default SideBar\n","import * as React from \"react\"\n\nimport TableOfContents from \"../components/table-of-contents\"\nimport TopBar from \"./top-bar\"\nimport SideBar from \"./side-bar\"\n\nconst Layout = ({ location, title, tableOfContents, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  const openSideBar = () => {\n    document.body.classList.add(\"side-bar-toggled\")\n  }\n\n  const closeSideBar = () => {\n    document.body.classList.remove(\"side-bar-toggled\")\n  }\n\n  return (\n    <div>\n      <TopBar openSideBar={openSideBar} title={title} />\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n        <div className=\"side-bar-background\" onClick={closeSideBar}></div>\n        <main>\n          <SideBar\n            closeSideBar={closeSideBar}\n            tableOfContents={tableOfContents}\n          >\n            {tableOfContents ? (\n              <TableOfContents tableOfContents={tableOfContents} />\n              ) : null}\n          </SideBar>\n          <section>{children}</section>\n        </main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              github\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"google-site-verification\" content=\"jlqn7azbwoCBubAjhRZ6xxO5z0kYsy4TBOZISUTuRfY\" />\n      {children}\n    </>\n    // <meta name=\"twitter:card\" content=\"summary\" />\n    // <meta\n    //   name=\"twitter:creator\"\n    //   content={site.siteMetadata?.social?.twitter || ``}\n    // />\n    // <meta name=\"twitter:title\" content={title} />\n    // <meta name=\"twitter:description\" content={metaDescription} />\n  )\n}\n\nexport default Seo\n","const _slugify = str => {\n  return str\n    .trim()\n    .replace(/ +/g, match => (match.includes(\" \") ? \"-\" : \"\"))\n    .replace(/[^\\wㄱ-ㅎ가-힣-]/g, \"\")\n    .toLowerCase()\n}\n\nmodule.exports.slugify = _slugify\n","export var IconsManifest = [\n  {\n    \"id\": \"ci\",\n    \"name\": \"Circum Icons\",\n    \"projectUrl\": \"https://circumicons.com/\",\n    \"license\": \"MPL-2.0 license\",\n    \"licenseUrl\": \"https://github.com/Klarr-Agency/Circum-Icons/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome 5\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"fa6\",\n    \"name\": \"Font Awesome 6\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"lu\",\n    \"name\": \"Lucide\",\n    \"projectUrl\": \"https://lucide.dev/\",\n    \"license\": \"ISC\",\n    \"licenseUrl\": \"https://github.com/lucide-icons/lucide/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"hi2\",\n    \"name\": \"Heroicons 2\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"sl\",\n    \"name\": \"Simple Line Icons\",\n    \"projectUrl\": \"https://thesabbir.github.io/simple-line-icons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/Keyamoon/IcoMoon-Free/blob/master/License.txt\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/atisawd/boxicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"tb\",\n    \"name\": \"Tabler Icons\",\n    \"projectUrl\": \"https://github.com/tabler/tabler-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"tfi\",\n    \"name\": \"Themify Icons\",\n    \"projectUrl\": \"https://github.com/lykmapipo/themify-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/thecreation/standard-icons/blob/master/modules/themify-icons/LICENSE\"\n  },\n  {\n    \"id\": \"rx\",\n    \"name\": \"Radix Icons\",\n    \"projectUrl\": \"https://icons.radix-ui.com\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/radix-ui/icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"pi\",\n    \"name\": \"Phosphor Icons\",\n    \"projectUrl\": \"https://github.com/phosphor-icons/core\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/phosphor-icons/core/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"lia\",\n    \"name\": \"Icons8 Line Awesome\",\n    \"projectUrl\": \"https://icons8.com/line-awesome\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/icons8/line-awesome/blob/master/LICENSE.md\"\n  }\n]","import React from \"react\";\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from \"react\";\nimport { IconContext, DefaultContext } from \"./iconContext\";\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\nexport function GenIcon(data) {\n  // eslint-disable-next-line react/display-name\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function (conf) {\n    var attr = props.attr,\n      size = props.size,\n      title = props.title,\n      svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + \" \" : \"\") + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","slugify","require","urlPatterns","category","tags","urlKey","Object","keys","some","key","parameters","param","reduce","res","parameter","_interopRequireDefault","__esModule","_assertThisInitialized2","_inheritsLoose2","_defineProperty2","_react","_propTypes","ThemeToggler","_React$Component","_this","_len","arguments","args","_key","call","apply","this","concat","default","theme","window","__theme","_proto","prototype","componentDidMount","_this2","__onThemeChange","setState","toggleTheme","__setPreferredTheme","render","createElement","props","children","state","Component","propTypes","func","isRequired","_default","_ThemeToggler","hasNativeLazyLoadSupport","HTMLImageElement","srcSet","width","height","layout","wrapperStyle","className","style","getMainProps","isLoading","isLoaded","images","loading","shouldLoad","_extends","opacity","getPlaceholderProps","placeholder","backgroundColor","objectFit","objectPosition","position","top","left","bottom","right","result","transition","Sizer","React","paddingTop","maxWidth","display","alt","role","src","LayoutWrapper","_ref","_objectWithoutPropertiesLoose","Fragment","Image","decoding","Picture","_ref2","fallback","sources","sizes","media","type","fallbackImage","PropTypes","displayName","Placeholder","_Picture$propTypes","propName","componentName","Error","MainImage","removeNewLines","str","altValidator","rest","image","_excluded","Set","renderImageToStringPromise","renderImage","GatsbyImageHydrator","as","class","preactClass","onStartLoad","onLoad","onError","getWrapperProps","wStyle","wClass","wrapperProps","root","useRef","useMemo","JSON","stringify","sizer","useEffect","import","then","renderImageToString","swapPlaceholderImage","ssrImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","animationFrame","cleanupCallback","innerHTML","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","GatsbyImage","memo","_getStaticImage","StaticImage","__imageData","imageData","__error","console","warn","imgClassName","imgStyle","placeholderBackgroundColor","cleanedImages","checkDimensionProps","number","validLayouts","GatsbyImageBrowser","TableOfContents","updateTableOfContents","headers","document","querySelectorAll","links","topBarHeight","parseInt","getComputedStyle","currentHeader","from","e","pos","getBoundingClientRect","offset","scrollMarginTop","y","pop","forEach","link","decodedId","decodeURI","URL","href","hash","textContent","id","componentWillUnmount","tableOfContents","onChange","target","checked","utterancesEl","message","body","classList","contains","contentWindow","postMessage","changeUtteranceTheme","title","openSideBar","social","useStaticQuery","site","siteMetadata","S","formats","quality","Link","to","size","onClick","github","name","count","prefix","path","author","closeSideBar","categories","allMarkdownRemark","group","getPrefix","categoryIndex","subCategoryIndex","subCategories","fieldValue","totalCount","resolveUrl","subCategory","location","isRootPath","pathname","remove","Date","getFullYear","description","metaDescription","defaultTitle","content","property","match","includes","DefaultContext","color","undefined","attr","IconContext","__assign","assign","t","s","n","p","hasOwnProperty","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Tree2Element","tree","node","tag","child","GenIcon","data","IconBase","elem","conf","svgProps","computedSize","stroke","fill","strokeWidth","xmlns","Consumer","toPropertyKey","obj","value","defineProperty","enumerable","configurable","writable","_typeof","hint","prim","Symbol","toPrimitive","String","Number","arg","iterator","constructor"],"sourceRoot":""}