{"version":3,"file":"component---src-templates-blog-post-js-57a1bc98366b930daeda.js","mappings":"wQAwCA,MAtCgB,YACd,WAAYA,GAAQ,IAAD,EAIiB,OAHlC,cAAMA,IAAM,MAEPC,WAAaC,EAAAA,YAClB,EAAKC,MAAQ,CAAEC,OAAQ,WAAW,CACpC,EANc,YAMb,kBA6BA,OA7BA,EACDC,kBAAA,WACE,MAAMC,EAAWC,SAASC,cAAc,UACxCF,EAASG,OAAS,IAAMC,KAAKC,SAAS,CAAEP,OAAQ,YAChDE,EAASM,QAAU,IAAMF,KAAKC,SAAS,CAAEP,OAAQ,WACjDE,EAASO,OAAQ,EACjBP,EAASQ,IAAM,gCACfR,EAASS,aAAa,OAAQ,iCAC9BT,EAASS,aAAa,aAAc,SAGpC,MAAMC,EAAQT,SAASU,KAAKC,UAAUC,SAAS,QAC3C,cACA,eACJb,EAASS,aAAa,QAASC,GAC/BV,EAASS,aAAa,cAAe,aACrCL,KAAKT,WAAWmB,QAAQC,YAAYf,EACtC,EAAC,EAEDgB,OAAA,WACE,MAAM,OAAElB,GAAWM,KAAKP,MAExB,OACE,uBAAKoB,UAAU,oBACD,WAAXnB,GAAuB,2BAAK,4BACjB,YAAXA,GAAwB,2BAAK,qBAC9B,uBAAKoB,IAAKd,KAAKT,aAGrB,EAAC,EAnCa,CAASC,EAAAA,WCFK,IAExBuB,EAAe,6FA0ClB,OA1CkB,EACnBpB,kBAAA,WACEqB,OAAOC,iBAAiB,SAAUjB,KAAKkB,sBACzC,EAAC,EAEDA,sBAAA,WACE,MAAMC,EAAUtB,SAASuB,iBAAiB,0IAKpCC,EAAQxB,SAASuB,iBAAiB,2BAClCE,EAAqBN,OAAOO,YAAc,EAC1CC,EAAgBC,MAAMC,KAAKP,GAC9BQ,UACAC,MAAKC,GACQA,EAAEC,wBACHC,EAAIT,IAGnBD,EAAMW,SAAQH,IACRA,EAAEI,eAAgBT,aAAa,EAAbA,EAAeS,aACnCJ,EAAEhB,UAAY,SAEdgB,EAAEhB,UAAY,EAChB,GAEJ,EAAC,EAEDqB,qBAAA,WACElB,OAAOmB,oBAAoB,SAAUnC,KAAKkB,sBAC5C,EAAC,EAEDN,OAAA,WACE,OACE,uBAAKC,UAAU,4BACb,uBACEA,UAAU,oBACVuB,wBAAyB,CAAEC,OAAQrC,KAAKV,MAAMgD,mBAItD,EAAC,EA1CkB,CAAS9C,EAAAA,WA6C9B,Q,UCpCA,MA+Da+C,EAAO,IAAyC,IAAtCC,MAAQC,eAAgBC,IAAQ,EACrD,OACE,gBAAC,IAAG,CACFC,MAAOD,EAAKE,YAAYD,MACxBE,YAAaH,EAAKE,YAAYC,aAAeH,EAAKI,SAClD,EAIN,MAxEyB,IAGlB,IAAD,MAFJN,MAAM,SAAEO,EAAQ,KAAEC,EAAI,KAAEC,EAAMR,eAAgBC,GAAM,SACpDQ,GACD,EACC,MAAMC,GAA6B,QAAjB,EAAAF,EAAKG,oBAAY,aAAjB,EAAmBT,QAAK,QACpCL,EAAkBI,EAAKJ,gBAC7B,OACE,gBAAC,IAAM,CAACY,SAAUA,EAAUP,MAAOQ,GACjC,2BACEtC,UAAU,YACVwC,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYb,EAAKE,YAAYD,OAC1C,yBAAID,EAAKE,YAAYY,OAEvB,uBAAK3C,UAAU,QACZ6B,EAAKE,YAAYa,KACdf,EAAKE,YAAYa,KAAKC,KAAIC,GAAO,gBAAC,IAAG,CAACC,QAASD,MAC/C,MAEN,gBAAC,EAAe,CAACrB,gBAAiBA,IAClC,2BACEF,wBAAyB,CAAEC,OAAQK,EAAKmB,MACxCN,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAG,QAGR,gBAAC,EAAU,MACX,uBAAK1C,UAAU,iBACb,sBACEiD,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGpB,GACC,gBAAC,EAAAqB,KAAI,CAACC,GAAItB,EAASuB,OAAOC,KAAMC,IAAI,QAAO,KACtCzB,EAASH,YAAYD,QAI9B,0BACGK,GACC,gBAAC,EAAAoB,KAAI,CAACC,GAAIrB,EAAKsB,OAAOC,KAAMC,IAAI,QAC7BxB,EAAKJ,YAAYD,MAAM,SAM3B,C","sources":["webpack://archive-of-10cheon00/./src/components/utterances.js","webpack://archive-of-10cheon00/./src/components/table-of-contents.js","webpack://archive-of-10cheon00/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\n\nclass Utterances extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.commentsEl = React.createRef()\n    this.state = { status: \"pending\" }\n  }\n  componentDidMount() {\n    const scriptEl = document.createElement(\"script\")\n    scriptEl.onload = () => this.setState({ status: \"success\" })\n    scriptEl.onerror = () => this.setState({ status: \"failed\" })\n    scriptEl.async = true\n    scriptEl.src = \"https://utteranc.es/client.js\"\n    scriptEl.setAttribute(\"repo\", \"10cheon00/10cheon00.github.io\")\n    scriptEl.setAttribute(\"issue-term\", \"title\")\n\n    // initialize on first access.\n    const theme = document.body.classList.contains(\"dark\")\n      ? \"github-dark\"\n      : \"github-light\"\n    scriptEl.setAttribute(\"theme\", theme)\n    scriptEl.setAttribute(\"crossorigin\", \"anonymous\")\n    this.commentsEl.current.appendChild(scriptEl)\n  }\n\n  render() {\n    const { status } = this.state\n\n    return (\n      <div className=\"comments-wrapper\">\n        {status === \"failed\" && <div>Error. Please try again.</div>}\n        {status === \"pending\" && <div>Loading script...</div>}\n        <div ref={this.commentsEl} />\n      </div>\n    )\n  }\n}\n\nexport default Utterances\n","import * as React from \"react\"\n\nclass TableOfContents extends React.Component {\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.updateTableOfContents)\n  }\n\n  updateTableOfContents() {\n    const headers = document.querySelectorAll(`\n      section[itemProp=\"articleBody\"] h1,\n      section[itemProp=\"articleBody\"] h2,\n      section[itemProp=\"articleBody\"] h3\n    `)\n    const links = document.querySelectorAll(`div.table-of-contents a`)\n    const halfOfWindowHeight = window.innerHeight / 2;\n    const currentHeader = Array.from(headers)\n      .reverse()\n      .find(e => {\n        const pos = e.getBoundingClientRect()\n        return pos.y < halfOfWindowHeight\n      })\n\n    links.forEach(e => {\n      if (e.textContent === currentHeader?.textContent) {\n        e.className = \"active\"\n      } else {\n        e.className = \"\"\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.updateTableOfContents)\n  }\n\n  render() {\n    return (\n      <div className=\"table-of-contents-layout\">\n        <div\n          className=\"table-of-contents\"\n          dangerouslySetInnerHTML={{ __html: this.props.tableOfContents }}\n        ></div>\n      </div>\n    )\n  }\n}\n\nexport default TableOfContents\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Utterances from \"../components/utterances\"\nimport TableOfContents from \"../components/table-of-contents\"\n\nimport Tag from \"../components/tag\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n  const tableOfContents = post.tableOfContents\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <div className=\"tags\">\n          {post.frontmatter.tags\n            ? post.frontmatter.tags.map(tag => <Tag tagName={tag}></Tag>)\n            : null}\n        </div>\n        <TableOfContents tableOfContents={tableOfContents} />\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <Utterances />\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n      tableOfContents\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["props","commentsEl","React","state","status","componentDidMount","scriptEl","document","createElement","onload","this","setState","onerror","async","src","setAttribute","theme","body","classList","contains","current","appendChild","render","className","ref","TableOfContents","window","addEventListener","updateTableOfContents","headers","querySelectorAll","links","halfOfWindowHeight","innerHeight","currentHeader","Array","from","reverse","find","e","getBoundingClientRect","y","forEach","textContent","componentWillUnmount","removeEventListener","dangerouslySetInnerHTML","__html","tableOfContents","Head","data","markdownRemark","post","title","frontmatter","description","excerpt","previous","next","site","location","siteTitle","siteMetadata","itemScope","itemType","itemProp","date","tags","map","tag","tagName","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}