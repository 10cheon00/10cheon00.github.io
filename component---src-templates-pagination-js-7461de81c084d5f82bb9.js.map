{"version":3,"file":"component---src-templates-pagination-js-7461de81c084d5f82bb9.js","mappings":"wQAqBA,MAnBmB,IAAsC,IAArC,YAAEA,EAAW,eAAEC,GAAgB,EACjD,OACE,uBAAKC,UAAU,cACZD,EAAeE,KAAIC,GAEhB,qBACEF,UAAS,mBACPE,IAAUJ,EAAc,2BAA6B,IAEvDK,KAAM,WAAuB,IAAVD,EAAW,GAAMA,EAAK,KAExCA,KAIH,E,6BCR8B,IAEnBE,EAAc,8DAoEhC,OApEgC,wBACjCC,OAAA,WAAU,IAAD,EACPC,QAAQC,IAAIC,KAAKC,OACjB,MACMC,GAA6C,QAAjC,EAAAF,KAAKC,MAAME,KAAKC,KAAKC,oBAAY,aAAjC,EAAmCC,QAAK,QACpDC,EAAQP,KAAKC,MAAME,KAAKK,kBAAkBC,MAEhD,OACE,gBAAC,IAAM,CAACC,SALO,CAAEC,SAAU,KAKCL,MAAOJ,GACjC,gBAAC,IAAG,MACJ,sBAAIU,MAAO,CAAEC,UAAU,SACpBN,EAAMd,KAAIqB,IACT,MAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACEzB,UAAU,iBACV2B,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAYjB,GAC3B,yBAAOd,UAAU,aACdsB,EAAKC,YAAYS,QAIxB,uBAAKhC,UAAU,QACb,0BACGsB,EAAKC,YAAYU,KACdX,EAAKC,YAAYU,KAAKhC,KAAIiC,GACxB,sBACER,IAAKS,IAAUD,GACfd,MAAO,CACLgB,gBAAgB,KAAKC,EAAAA,EAAAA,GAAYH,KAGnC,gBAAC,EAAAL,KAAI,CAACC,GAAE,SAAWK,IAAUD,IAC1BC,IAAUD,OAIjB,SAaT,KAIX,gBAAC,EAAU,CACTpC,YAAaU,KAAKC,MAAM6B,YAAYxC,YACpCC,eAAgBS,KAAKC,MAAM6B,YAAYvC,iBAI/C,EAAC,EApEgC,CAASwC,EAAAA,WA4ErC,MAAMC,EAAO,IAAM,gBAAC,IAAG,CAAC1B,MAAM,a","sources":["webpack://archive-of-10cheon00/./src/components/pagination.js","webpack://archive-of-10cheon00/./src/templates/pagination.js"],"sourcesContent":["import * as React from \"react\"\n\nconst Pagination = ({ currentPage, paginationList }) => {\n  return (\n    <div className=\"pagination\">\n      {paginationList.map(index => {\n        return (\n          <a\n            className={`pagination-link${\n              index === currentPage ? \" pagination-current-link\" : \"\"\n            }`}\n            href={`/posts/` + (index !== 1 ? `${index}` : ``)}\n          >\n            {index}\n          </a>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Pagination\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Pagination from \"../components/pagination\"\n\nimport stringToRGB from \"../helpers/string-to-rgb\"\nimport kebabCase from \"lodash.kebabcase\"\n\nexport default class PaginationPage extends React.Component {\n  render() {\n    console.log(this.props);\n    const location = { pathname: \"/\" }\n    const siteTitle = this.props.data.site.siteMetadata?.title || `Title`\n    const posts = this.props.data.allMarkdownRemark.nodes\n\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <ol style={{ listStyle: `none` }}>\n          {posts.map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n\n            return (\n              <li key={post.fields.slug}>\n                <article\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <header>\n                    <h2>\n                      <Link to={post.fields.slug} itemProp=\"url\">\n                        <span itemProp=\"headline\">{title}</span>\n                        <small className=\"post-date\">\n                          {post.frontmatter.date}\n                        </small>\n                      </Link>\n                    </h2>\n                    <div className=\"tags\">\n                      <ul>\n                        {post.frontmatter.tags\n                          ? post.frontmatter.tags.map(tag => (\n                              <li\n                                key={kebabCase(tag)}\n                                style={{\n                                  backgroundColor: `#${stringToRGB(tag)}`,\n                                }}\n                              >\n                                <Link to={`/tags/${kebabCase(tag)}`}>\n                                  {kebabCase(tag)}\n                                </Link>\n                              </li>\n                            ))\n                          : null}\n                      </ul>\n                    </div>\n                  </header>\n                  {/* <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section> */}\n                </article>\n              </li>\n            )\n          })}\n        </ol>\n        <Pagination \n          currentPage={this.props.pageContext.currentPage}\n          paginationList={this.props.pageContext.paginationList}\n          />\n      </Layout>\n    )\n  }\n}\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`\n"],"names":["currentPage","paginationList","className","map","index","href","PaginationPage","render","console","log","this","props","siteTitle","data","site","siteMetadata","title","posts","allMarkdownRemark","nodes","location","pathname","style","listStyle","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","tags","tag","kebabCase","backgroundColor","stringToRGB","pageContext","React","Head"],"sourceRoot":""}