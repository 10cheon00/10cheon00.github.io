{"version":3,"file":"component---src-templates-pagination-js-cdd79ccf1ce60110a96b.js","mappings":"wQAqDA,MAnDmB,IAA0D,IAAzD,YAAEA,EAAW,cAAEC,EAAa,oBAAEC,GAAqB,EACrE,MAAMC,EAA6BC,KAAKC,OAAOL,EAAc,GAAKC,GAAiBA,EAC7EK,EAA0BF,KAAKC,OAAOL,EAAc,GAAKC,EAAgB,GAAKA,EAAgB,EAEpG,IAAIM,EAAoBC,EACpBR,EAAcC,IAChBM,EACE,qBACEE,UAAU,sCACVC,KAAI,IAAMP,GAET,OAIHG,GAA2BJ,IAC7BM,EACE,qBACEC,UAAU,kCACVC,KAAI,IAAMJ,GAET,OAKP,MAAMK,EAAiBC,MAAMV,GAC1BW,OACAC,KAAI,CAACC,EAAGC,IAAMA,EAAI,IAClBC,MAAMd,EAA4BG,EAA0B,GAE/D,OACE,uBAAKG,UAAU,cACZF,EACAI,EAAeG,KAAII,GAEhB,qBACET,UAAS,mBACPS,IAAUlB,EAAc,2BAA6B,IAEvDU,KAAI,KAAgB,IAAVQ,EAAW,GAAMA,EAAK,KAE/BA,KAINV,EACG,E,6BCxC8B,IAEnBW,EAAc,8DAoEhC,OApEgC,wBACjCC,OAAA,WAAU,IAAD,EACP,MACMC,GAA6C,QAAjC,EAAAC,KAAKC,MAAMC,KAAKC,KAAKC,oBAAY,aAAjC,EAAmCC,QAAK,QACpDC,EAAQN,KAAKC,MAAMC,KAAKK,kBAAkBC,MAEhD,OACE,gBAAC,IAAM,CAACC,SALO,CAAEC,SAAU,KAKCL,MAAON,GACjC,gBAAC,IAAG,MACJ,sBAAIY,MAAO,CAAEC,UAAU,SACpBN,EAAMd,KAAIqB,IACT,MAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACE7B,UAAU,iBACV+B,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAYjB,GAC3B,yBAAOlB,UAAU,aACd0B,EAAKC,YAAYS,QAIxB,uBAAKpC,UAAU,QACb,0BACG0B,EAAKC,YAAYU,KACdX,EAAKC,YAAYU,KAAKhC,KAAIiC,GACxB,sBACER,IAAKS,IAAUD,GACfd,MAAO,CACLgB,gBAAgB,KAAKC,EAAAA,EAAAA,GAAYH,KAGnC,gBAAC,EAAAL,KAAI,CAACC,GAAE,SAAWK,IAAUD,IAC1BC,IAAUD,OAIjB,SAaT,KAIX,gBAAC,EAAU,CACT/C,YAAasB,KAAKC,MAAM4B,YAAYnD,YACpCC,cAAeqB,KAAKC,MAAM4B,YAAYlD,cACtCC,oBAAqBoB,KAAKC,MAAM4B,YAAYjD,sBAIpD,EAAC,EApEgC,CAASkD,EAAAA,WA4ErC,MAAMC,EAAO,IAAM,gBAAC,IAAG,CAAC1B,MAAM,a","sources":["webpack://archive-of-10cheon00/./src/components/pagination.js","webpack://archive-of-10cheon00/./src/templates/pagination.js"],"sourcesContent":["import * as React from \"react\"\n\nconst Pagination = ({ currentPage, numPagination, paginationPageCount }) => {\n  const previousPaginationLastPage = Math.floor((currentPage - 1) / numPagination) * numPagination\n  const nextPaginationFirstPage = Math.floor((currentPage - 1) / numPagination + 1) * numPagination + 1\n  \n  let previousPagination, nextPagination\n  if (currentPage > numPagination) {\n    previousPagination = (\n      <a\n        className=\"pagination-link pagination-previous\"\n        href={`/${previousPaginationLastPage}`}\n      >\n        {\"<<\"}\n      </a>\n    )\n  }\n  if (nextPaginationFirstPage <= paginationPageCount) {\n    nextPagination = (\n      <a\n        className=\"pagination-link pagination-next\"\n        href={`/${nextPaginationFirstPage}`}\n      >\n        {\">>\"}\n      </a>\n    )\n  }\n\n  const paginationList = Array(paginationPageCount)\n    .fill()\n    .map((_, i) => i + 1)\n    .slice(previousPaginationLastPage, nextPaginationFirstPage - 1)\n\n  return (\n    <div className=\"pagination\">\n      {previousPagination}\n      {paginationList.map(index => {\n        return (\n          <a\n            className={`pagination-link${\n              index === currentPage ? \" pagination-current-link\" : \"\"\n            }`}\n            href={`/${index !== 1 ? `${index}` : ``}`}\n          >\n            {index}\n          </a>\n        )\n      })}\n      {nextPagination}\n    </div>\n  )\n}\n\nexport default Pagination\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Pagination from \"../components/pagination\"\n\nimport stringToRGB from \"../helpers/string-to-rgb\"\nimport kebabCase from \"lodash.kebabcase\"\n\nexport default class PaginationPage extends React.Component {\n  render() {\n    const location = { pathname: \"/\" }\n    const siteTitle = this.props.data.site.siteMetadata?.title || `Title`\n    const posts = this.props.data.allMarkdownRemark.nodes\n\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <ol style={{ listStyle: `none` }}>\n          {posts.map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n\n            return (\n              <li key={post.fields.slug}>\n                <article\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <header>\n                    <h2>\n                      <Link to={post.fields.slug} itemProp=\"url\">\n                        <span itemProp=\"headline\">{title}</span>\n                        <small className=\"post-date\">\n                          {post.frontmatter.date}\n                        </small>\n                      </Link>\n                    </h2>\n                    <div className=\"tags\">\n                      <ul>\n                        {post.frontmatter.tags\n                          ? post.frontmatter.tags.map(tag => (\n                              <li\n                                key={kebabCase(tag)}\n                                style={{\n                                  backgroundColor: `#${stringToRGB(tag)}`,\n                                }}\n                              >\n                                <Link to={`/tags/${kebabCase(tag)}`}>\n                                  {kebabCase(tag)}\n                                </Link>\n                              </li>\n                            ))\n                          : null}\n                      </ul>\n                    </div>\n                  </header>\n                  {/* <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section> */}\n                </article>\n              </li>\n            )\n          })}\n        </ol>\n        <Pagination \n          currentPage={this.props.pageContext.currentPage}\n          numPagination={this.props.pageContext.numPagination}\n          paginationPageCount={this.props.pageContext.paginationPageCount}\n          />\n      </Layout>\n    )\n  }\n}\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`\n"],"names":["currentPage","numPagination","paginationPageCount","previousPaginationLastPage","Math","floor","nextPaginationFirstPage","previousPagination","nextPagination","className","href","paginationList","Array","fill","map","_","i","slice","index","PaginationPage","render","siteTitle","this","props","data","site","siteMetadata","title","posts","allMarkdownRemark","nodes","location","pathname","style","listStyle","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","tags","tag","kebabCase","backgroundColor","stringToRGB","pageContext","React","Head"],"sourceRoot":""}